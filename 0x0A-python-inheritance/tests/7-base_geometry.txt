The ``7-base_geometry`` module
==============================

Using ``BaseGeometry``
----------------------

Importing the class from the module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Attempting to calculate the area without implementation:
    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    	      ...
    Exception: area() is not implemented

Validating integer parameters using the `integer_validator` method:

1. Passing a non-integer argument:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "5")
    Traceback (most recent call last):
    	      ...
    TypeError: name must be an integer

2. Passing a boolean value:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", True)
    Traceback (most recent call last):
    	      ...
    TypeError: name must be an integer

3. Passing a negative value:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", -5)
    Traceback (most recent call last):
    	      ...
    ValueError: name must be greater than 0

4. Passing a zero value:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 0)
    Traceback (most recent call last):
    	      ...
    ValueError: name must be greater than 0

5. Passing a positive value:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 5)

6. Attempting to use `integer_validator` with various argument scenarios:

    - Passing one argument to `integer_validator`:
        >>> bg = BaseGeometry()
        >>> bg.integer_validator("name")
        Traceback (most recent call last):
    	      ...
        TypeError: integer_validator() missing 1 required positional argument: 'value'

    - Using `integer_validator` with no arguments:
        >>> bg = BaseGeometry()
        >>> bg.integer_validator()
        Traceback (most recent call last):
    	      ...
        TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    - Passing three arguments to `integer_validator`:
        >>> bg = BaseGeometry()
        >>> bg.integer_validator("name", 1, 2)
        Traceback (most recent call last):
    	      ...
        TypeError: integer_validator() takes 3 positional arguments but 4 were given

Attempting to use the `area` method with different argument scenarios:

1. Passing one argument to `area` method:
    >>> bg = BaseGeometry()
    >>> bg.area(5)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 2 were given

2. Passing two arguments to `area` method:
    >>> bg = BaseGeometry()
    >>> bg.area(5, 5)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 3 were given

Additional scenarios with `integer_validator`:

- Passing a tuple to the method:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", (4,))
    Traceback (most recent call last):
    	      ...
    TypeError: age must be an integer

- Passing a list to the method:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
    	      ...
    TypeError: age must be an integer

- Passing a dictionary to the method:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
              ...
    TypeError: age must be an integer

- Passing None to the method:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
              ...
    TypeError: age must be an integer
